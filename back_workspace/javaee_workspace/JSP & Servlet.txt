1. 다음 설명 중 틀린 것은?
(1) ✅ Java 언어의 개발 플랫폼은 크게 JavaSE, JavaEE, JavaME 의 3가지가 있다
(2) ✅ JavaSE로 제작된 프로그램을 실행하려면,  이 프로그램을 사용하려는 자의 PC에 프로그램 코드가 배포되어 있어야 한다.
(3) ✅ 어떤 PC 에 이미 JavaSE 기반 프로그램이 배포되고 난 후, 프로그램에 수정이 필요하다하면 해당 PC의 프로그램은 수정본으로 재배포 되어져야 한다.
(4) ❌JavaEE 기반으로 제작되어진 프로그램의 배포 대상은 프로그램 사용자의 PC이다.

2. 웹어플리케이션에 대한 설명 중 맞는 것을 고르면 ?
(1) ❌JavaEE 기반으로 제작된 프로그램은 서버에 배포되며, 이 프로그램의 사용자는 JVM과 같은 전용 도구가 있어야 
	서버에서 실행된 프로그램의 실행 결과를 얻을 수 있다.
(2) ❌JavaEE 기반으로 작성된 웹어플리케이션의 디자인 영역을 담당하는 기술은  
	HTML,CSS,JS 등의 Front-End 기반의 기술들 이며, 이 기술들에 대한 해석 및 실행을 담당하는 쪽은 Server-Side 이어야 한다
(3) ✅ JavaEE 기반의 웹어플리케이션을 작성한 후, 개발자가 서버에  배포해 놓으면 다수의 사용자는 웹브라우저로 프로그램의 실행을 요청하게
     되는데, 이때 서버측에 배포된 파일중 Java 클래스는 서버측의 컴퓨터에서 실행되어 버리지만,  
	Font-end 관련 기술들은 실행 시키지는 않고, 단순히 읽어들인 후 클라이언트에게 그대로 전송을 해버린다. 
(4) ✅ 위(3)번과 같이 Font-End 기술과 관련된 파일들이 그대로 클라이언트에 전송되 버리는 이유는, 
	Font-End 기술을 해석 및 실행할 수 있는 전용 프로그램은 웹브라우저이기 때문이다. 
(5) ✅ 결국 웹어플리케이션은 중앙의 서버가 실행을 담당하므로 서버 컴퓨터의 실행 환경, 사양, 성능 등이 중요한 반면에, 
	웹애플리케이션의 사용자는 어떠한 추가적 설치나 환경을 구축해야 할 부담이 없이 오직 웹브라우저 하나만 준비되어 있으면 된다.
(6) ❌ 유지 보수성이나 배포의 편의성을 고려해본다면, JavaSE가 JavaEE에 비해 유리하다.

3. 다음 중 틀린 것을 고르면?
(1) ✅ JavaSE 로 어플리케이션을 개발하려면 JDK자바개발도구)를 설치해야 하며, 이 JDK에는 String, Calender 등 개발에 필요한 각종 API들이 포함되어 있다.
(2) ❌ JavaEE 로 서버 기술을 구현하려면 서버 구축과 관련된 클래스를 포함한 API 즉 JavaEE API가 필요하므로 JEEDK 의 설치가 필요하다. 
(3) ✅ JavaEE 기반의 프로그램 개발 시, 개발자가 자신의 PC에 설치해야 할 JavaEE 개발용 SDK는 없는 이유는 Sun에서는 기준을 제시하면, 
    그 기준에 따라 각 벤더사들은 서버 등을 제작하면서, 개발자들이 서버 구축에 사용할 클래스 포함한 API 를 , 해당 제품에 넣어두기 때문이다. 
    즉 JavaEE 개발을 위해서는 서버만 있으면 되고 이 서버안에 개발에 필요한 API 가 포함되어 있다.
(4) ❌JavaEE 기반 웹어플리케이션 개발에 사용될 API가 각 벤더사에 제공하는 서버에 들어있을 경우, 
	각 제품에 포함된 API를 이루는 클래스명, 메서드명이 서로 틀리게 되므로, 개발자는 서버 제품 선택 시 신중해야 하며, 
	서버 제품이 바뀌면 개발 코드도 변경되어야 한다.

4.다음 설명 중 틀린 것을 모두 고르면?
(1) ❌JavaEE 기반의 웹서비스를 구축하려면 JavaEE 기반의 코드가 실행될 수 있는 전용 서버 프로그램을
    이용해야 하는데, 이 서버 프로그램을 개발하는 업체는 바로  Sun 사이다.
(2) ❌JavaEE 전용 서버의 제조사마다 작동 방식이 틀리므로 , 제품이 바뀌면 자바 개발자들은 웹프로그램
    소스 코드도 변경해야 한다.
(3) ✅ HTML/CSS같은 정적 자원들을 서비스하기 위한 용도의 서버를 일반적으로 웹서버라 하며, JSP와 같은
     동적 컨텐츠를 실행할 수 있는 웹서버를 WAS(Web Application Server)라 한다.
(4) ✅ WAS 제품의 종류엔 WebLogic, JBoss, JEUS 등이 있다.
(5) ❌ 사용중인 WAS가 변경 될 경우, 웹어플리케이션 코드도 해당 제품에 맞게 다시 변경해야 한다. 

5. 다음 중 `규모가 큰` JavaEE 기반 웹서비스 구축을 위한 가장 이상적인 조합은?
(1) 서버용 OS는 Window, DB는 MSSQL , 웹서버는 IIS  구성
(2) 서버용 OS는 Linux, DB는 MySQL , 웹서버는 Tomcat 으로 구성
(3) 서버용 OS는 Window, DB는 Oracle , 웹서버는 Tomcat 으로 구성
(4) ✅ 서버용 OS는 Unix, DB는 오라클 , 서버는 WAS로 구성

개발 윈도우 -  리눅스  -  tomcat/Resin(유료) -  MySQL (중, 소) 
             jsp, java, php
------------------------------------------------------------------------
개발 윈도우 -  유닉스  - WebLogic/JBoss -  Oracle (대형)

6. 다음 설명 중 틀린 것은?

(1) ✅JavaEE 기반의 WAS(웹어플리케이션 서버)의 종류는 오라클사의 WebLogic, 레드햇의 JBoss, 티맥스소프트의 JEUS 등과 , 
	Apache의 Tomcat, caucho의 Resin과 같은  웹컨테이너가 있다
(2) ✅ 웹서버를 Tomcat으로 개발하던 WebLogic으로 개발하던 클래스나 jar파일은 반드시 WEB-INF/lib 디렉토리에 두어야 한다는 스팩에는 변함이 없다.
(3) ✅WebLogic, JBoss 등 javaEE기반의 WAS(웹어플리케이션 서버)는 모두 Sun의 JavaEE 스팩을 준수하여 제작되었으므로, 
	WAS가 바뀌었다고 해도 기존 소스 코드가 변경되는 일은 없다.
(4) ❌JavaEE 개발에 필요한 클래스 및 API의 구현체인 jar파일은 Sun의 웹사이트를 통해 다운받으면 된다.

7. JavaEE(Enterprise Edition)의 기업 업무용 어플리케이션 시장의 독점을 견제하기 위한 마이크로 소프트의 개발 플랫폼은 무엇이며 JavaEE와의 차이점을 설명하시오.
.NET (닷넷) 
- JavaEE는 오픈 표준 기반의 엔터프라이즈 플랫폼이고,
- .NET은 마이크로소프트의 윈도우 중심 독자 생태계로 JavaEE의 시장 독점을 견제하려 했던 플랫폼입니다.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
HTTP 프로토콜 (통신규약)


