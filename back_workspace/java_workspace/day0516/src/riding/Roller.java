// 신발에 착용하여, 타고다닐 수 있는 기기에 대한 소프트웨어
// 회사의 모든 개발자들이 반드시 구현해야할 탈 수 있는 기능 정의를 위한 가이드라인 제시
package riding;

/*
Java에서는 현실의 개념을 그대로 반영하여, 다중상속을 허용하지 않는다.
하지만, 우리의 현실에서 제품을 개발할 때 다중상속적 특성이 상당히 반영되어있음
ex) 스마트폰 (TV,휴대폰,카메라,Mp3 기능 등 다중적임)

인터페이스 : 객체가 아니라, 하위 객체들이 구현해야 할 메서드만을 보유한 명세 (가이드 단위)
따라서 하위 객체들이 이 인터페이스를 상속받아도 객체가 아니므로
다중상속 금지에 해당되지 않음
인터페이스는 상수와 추상메서드만을 보유할 수 있는 단위이므로, 
어차피 인터페이스가 보유한 메서드는 추상메서드이기 때문에 별도로 abstract 수식자를 명시하지 않는다
*/
public interface Roller{ //class 대신 interface → 다중상속 허용 
	//abstract 제거 (고전적인 interface는 추상메서드만 가지고 있음)
	
	// 굴러가는 기능 가이드 제시
	public void roll();
}

//인터페이스간 상속 가능 (보기 드묾)

/*
새가 아니라, 새가 가지고 있는 기능(날개)만 정의 : 인터페이스
객체 - 객체의 기능 '분리'
*/