/*
Java에서는 비슷한 자료형 간에는 서로 형변환이 가능하다
*/
class DataType2{
	public static void main(String[] args){
		/*
		문자: char 한 문자를 담을 수 있다 ex) char x ='a';
		숫자: 정수 byte<short<int<long
					  1		  2		  4		8
			   실수				    float<double
									   4	   8
		논리값: boolean 1
		java에서는 true=1, false=0 아님
		*/
		
		byte b=5;
		short s=7;
		byte x=8;
		
		// b=x; // 대입 연산, 뿐만 아니라 일반적으로 연산자가 동작하기 위해서는
				// 연산 대상이 되는 데이터는 자료형이 동일해야 함
		s=b; // 이 코드는 연산대상이 되는 피연산자들이 동일하지 않기 때문에
				// java 컴파일러가 자료형을 동일하게 변환시킴
				// 즉, 개발자가 처리한 것이 아니라 컴파일러에 의한 형변환
				// 자동 형변환
				// 1) 같은 숫자라는 가족 (같은 종류의 자료형)
				// 2) 작은 것을 큰 자료형에 대입하고 있으므로, 데이터 손실 발생 x
				
	//크기가 다른 자료형간의 연산은 크기가 큰 자료형으로 자동 형변환 후 연산
				
		b=(byte)s; //개발자가 데이터의 손실을 감안해서라도 원하는 같은 종류의 자료형으로
						//변환하는 것을 강제형변환 이라고 함
						// 이때 사용되는 ()를 `cast 연산자`라고 함
						//강제 형변환
						//주의) 형변환이 강제이던 자동이던 언제나 같은 종류끼리만 지원
						
		char c='B'; //컴파일 타임에 java가 귀찮음을 감수하고 유니코드 찾아봄
		char d='한'; //컴파일 타임에 java가 귀찮음을 감수하고 유니코드 찾아봄
		char k=96; //개발자가 유니코드를 찾아서 직접 넣어준 것으로 생각하여 고마워함
		//문자에 해당하는 유니코드라고 생각함
		// char m=-30; // char형은 사실상 숫자형은 맞으나, 여기 담을 수 있는 수는
						//아스키 포함한 유니코드를 담기 위한 용도이다.
						//키고드 체계에서는 음수 지원x 에러 발생
						
		s=(short)k; //에러 - 강제형변환 필요
	}

}